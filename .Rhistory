right_join(metadata %>% select(sample_id)) %>%
column_to_rownames("sample_id")
NMDS_ord <- otu_norm %>%
metaMDS(k=2)
#pull out ordination and vector coordinates for plotting
NMDS_coords <- NMDS_ord[["points"]] %>%
as_tibble(rownames = "sample_id") %>%
left_join(metadata)
#pull out ordination and vector coordinates for plotting
NMDS_coords <- NMDS_ord[["points"]] %>%
as_tibble(rownames = "sample_id") %>%
left_join(metadata)
#make shape dictionary for ploting
shape_dict <- c(0, 15, 15, 1, 19, 19, 2, 17, 17, 5, 5, 5, 5)
names(shape_dict) <- c("D1.fluid", "D1.inert.control", "D1.mineral", "D3.fluid", "D3.inert.control", "D3.mineral", "D6.fluid", "D6.inert.control", "D6.mineral","D3.cont.control", "4800.cont.control", "800.cont.control", "4100L.fluid")
#NMDS plot with controls
NMDS_plot <- NMDS_coords %>%
ggplot(aes(MDS1, MDS2)) +
geom_point(size=2, alpha=0.8, aes(shape=site.type, color=site.type, label = sample_id)) +
ggplot2::scale_shape_manual(values=shape_dict) +
theme(legend.key.size = unit(.5, "cm"))
#visualize interactive plot
ggplotly(NMDS_plot)
blogdown::hugo_build(local = T)
NMDS_ord <- otu_norm %>%
metaMDS(k=2)
NMDS_ord <- otu_norm %>%
metaMDS(k=2)
NMDS_ord <- otu_norm %>%
metaMDS(k=2)
blogdown::hugo_build(local = T)
blogdown::hugo_build(local = T)
NMDS_plot
View(NMDS_coords)
View(otu_norm)
View(abundance_table)
View(NMDS_coords)
#make shape dictionary for ploting
shape_dict <- c(0, 15, 15, 1, 19, 19, 2, 17, 17, 5, 5)
names(shape_dict) <- c("D1.fluid", "D1.inert.control", "D1.mineral", "D3.fluid", "D3.inert.control", "D3.mineral", "D6.fluid", "D6.inert.control", "D6.mineral","D3.cont.control", "ambient.control")
#NMDS plot with controls
NMDS_plot <- NMDS_coords %>%
ggplot(aes(MDS1, MDS2)) +
geom_point(size=2, alpha=0.8, aes(shape=site.type, color=site.type, label = sample_id)) +
ggplot2::scale_shape_manual(values=shape_dict) +
theme(legend.key.size = unit(.5, "cm"))
#visualize interactive plot
ggplotly(NMDS_plot)
NMDS_plot
blogdown::hugo_build(local = T)
blogdown::hugo_build(local = T)
blogdown::hugo_build(local = T)
blogdown::hugo_build(local = T)
blogdown::hugo_build(local = T)
blogdown::hugo_build(local = T)
blogdown::hugo_build(local = T)
blogdown:::serve_site()
blogdown:::serve_site()
blogdown::hugo_build(local = T)
blogdown::hugo_build(local = T)
blogdown::hugo_build(local = T)
blogdown:::serve_site()
blogdown:::serve_site()
blogdown::hugo_build(local = T)
blogdown::hugo_build(local = T)
blogdown::hugo_build(local = T)
blogdown::hugo_build(local = T)
blogdown:::serve_site()
blogdown:::serve_site()
blogdown::hugo_build(local=T)
blogdown:::serve_site()
blogdown::hugo_build(local=T)
blogdown::new_post(
)
blogdown::new_post(title = "test", subdir="test", date = 2020-06-09T21:14:16-05:00)
blogdown::new_post(title = "test", subdir="test", date = "June 1 2020")
blogdown::new_post(title = "test", subdir="post", date = "June 1 2020")
blogdown::hugo_build(local=T)
blogdown::new_post(title = "test", subdir="post/test", date = "June 1 2020")
blogdown::hugo_build(local=T)
blogdown::hugo_build(local=T)
blogdown::hugo_build(local=T)
blogdown::hugo_build(local=T)
blogdown::hugo_build(local=T)
blogdown::hugo_build(local=T)
blogdown::hugo_build(local=T)
blogdown::hugo_build(local=T)
blogdown:::serve_site()
blogdown::hugo_build(local=T)
blogdown::hugo_build(local=T)
blogdown:::serve_site()
#load tidyverse library
pacman::p_load(tidyverse)
activities <- read_csv("https://raw.githubusercontent.com/CaitlinCasar/Casar2020_DeMMO_MineralHostedBiofilms/master/orig_data/DeMMO_SpecE8_aqueousGas.csv")
#import DeMMO mineral reactions
reactions <- read_csv("https://raw.githubusercontent.com/CaitlinCasar/Casar2020_DeMMO_MineralHostedBiofilms/master/orig_data/reactions_aq_gas.csv")
#load the CHNOSZ library
pacman::p_load(CHNOSZ)
#load the CHNOSZ library
pacman::p_load(CHNOSZ)
thermo_db <- thermo()$obigt %>% as_tibble()
#add pyrolusite to database
pyrolusite <- mod.obigt("pyrolusite", G=-111100, H=-124283, S=12.61, V=17.3, formula="MnO2", state="cr", a1.a=12.55, a2.b=9.761, a3.c=-2.105)
#add ferrihydrite to database
ferrihydrite <- mod.obigt("ferrihydrite", G=-111200, H=-127800, S=16.7, V=20.88, formula="FeOOH", state="cr", a1.a=8.70, a2.b=36.71, a3.c=-1.0146)
#add manganite to database
manganite <- mod.obigt("manganite", G=-133300, formula="MnOOH", state="cr")
#set temperature units to Kelvin
T.units("K")
#set energy units to joules
E.units("J")
logK <- reactions %>%
pivot_longer(reactant.a:state.i,
names_to = c(".value", "set"),
names_pattern = "(.+).(.+)") %>% #pivot from wide to long dataframe
unite("react_prod", reactant:product, na.rm = TRUE, remove = F) %>% #unite the reactants and products into one column
filter(!react_prod == "") %>% #remove any rows with missing react_prod values
group_by(rxn.number) %>% #group by reaction number for calculations
summarise(DeMMO1 = if_else("manganite" %in% react_prod, subcrt(react_prod, coeff, state, T=298.15)$out$logK, #calculate logK for manganite using 298.15 for the temperature since we don't have the equation of state data
subcrt(react_prod, coeff, state, T=283.45)$out$logK), #calculate logK using in situ DeMMO1 temperature for all other reactions
DeMMO2 = if_else("manganite" %in% react_prod, subcrt(react_prod, coeff, state, T=298.15)$out$logK,
subcrt(react_prod, coeff, state, T=285.55)$out$logK),
DeMMO3 = if_else("manganite" %in% react_prod, subcrt(react_prod, coeff, state, T=298.15)$out$logK,
subcrt(react_prod, coeff, state, T=289.35)$out$logK),
DeMMO4 = if_else("manganite" %in% react_prod, subcrt(react_prod, coeff, state, T=298.15)$out$logK,
subcrt(react_prod, coeff, state, T=295.65)$out$logK),
DeMMO5= if_else("manganite" %in% react_prod, subcrt(react_prod, coeff, state, T=298.15)$out$logK,
subcrt(react_prod, coeff, state, T=304.85)$out$logK),
DeMMO6 = if_else("manganite" %in% react_prod, subcrt(react_prod, coeff, state, T=298.15)$out$logK,
subcrt(react_prod, coeff, state, T=294.65)$out$logK)) %>%
pivot_longer(cols = DeMMO1:DeMMO6, names_to = "Site", values_to = "LogK") %>% #pivot from wide to long for merging later
distinct() #remove the duplicate rows
View(logK)
activities <- activities %>%
pivot_longer(`Ca+2`:CO, names_to = "react_prod", values_to = "activity") #pivot from wide to long for joining
logQ <- reactions %>%
pivot_longer(reactant.a:state.i,
names_to = c(".value", "set"),
names_pattern = "(.+).(.+)") %>% #pivot from wide to long
unite("react_prod", reactant:product, na.rm = TRUE, remove = F) %>% #unite the reactant and product columns into one column called react_prod
left_join(activities) %>% #join with the activities data
filter(!is.na(activity)) %>% #remove any activities with NA values
mutate(logQ = if_else(!is.na(reactant), -abs(coeff)*activity, abs(coeff)*activity)) #multiply each species by its stoichiometric coefficient
group_by(rxn.number, Site) %>% #group on the reaction number and site
summarise(logQ = sum(logQ)) #calculate logQ
View(logQ)
activities <- activities %>%
pivot_longer(`Ca+2`:CO, names_to = "react_prod", values_to = "activity") #pivot from wide to long for joining
View(activities)
#load tidyverse library
pacman::p_load(tidyverse)
activities <- read_csv("https://raw.githubusercontent.com/CaitlinCasar/Casar2020_DeMMO_MineralHostedBiofilms/master/orig_data/DeMMO_SpecE8_aqueousGas.csv")
View(activities)
View(activities)
activities <- activities %>%
pivot_longer(`Ca+2`:CO, names_to = "react_prod", values_to = "activity") #pivot from wide to long for joining
logQ <- reactions %>%
pivot_longer(reactant.a:state.i,
names_to = c(".value", "set"),
names_pattern = "(.+).(.+)") %>% #pivot from wide to long
unite("react_prod", reactant:product, na.rm = TRUE, remove = F) %>% #unite the reactant and product columns into one column called react_prod
left_join(activities) %>% #join with the activities data
filter(!is.na(activity)) %>% #remove any activities with NA values
mutate(logQ = if_else(!is.na(reactant), -abs(coeff)*activity, abs(coeff)*activity)) %>% #multiply each species by its stoichiometric coefficient
group_by(rxn.number, Site) %>% #group on the reaction number and site
summarise(logQ = sum(logQ)) #calculate logQ
deltaG <- logK %>%
left_join(logQ) %>% #join the logK and logQ tables
left_join(reactions %>% select(rxn.number, e.transfer, reactant.a)) %>% #add the reaction number, number of electrons transferred, and minerals from each reaction
rename(mineral = "reactant.a") %>% #rename reactant.a to mineral for clarity
mutate(deltaG = (-2.303*8.314*283.45*(LogK-logQ))/(e.transfer*1000)) #calculate deltaG for each reaction at each site
View(deltaG)
blogdown::hugo_build(local = T)
blogdown:::serve_site()
blogdown::hugo_build(local = T)
blogdown:::serve_site()
emo::ji_find("scientist")
blogdown::hugo_build(local = T)
View(reactions)
View(reactions)
View(reactions)
blogdown::hugo_build(local = T)
blogdown:::serve_site()
blogdown::hugo_build(local = T)
blogdown:::serve_site()
blogdown::hugo_build(local = T)
blogdown:::serve_site()
blogdown::hugo_build(local = T)
blogdown:::serve_site()
update.packages(plotly)
update.packages("plotly")
blogdown::hugo_build(local = T)
update.packages("plotly")
blogdown:::serve_site()
blogdown::hugo_build(local = T)
blogdown::hugo_build(local = T)
blogdown::hugo_build(local = T)
blogdown:::serve_site()
widgetframe::frameableWidget(ggplotly(bar_plot))
widgetframe::frameableWidget(plotly::ggplotly(bar_plot))
#load libraries
pacman::p_load(tidyverse, plotly, randomcoloR)
#read the data into a dataframe
otu_table <- read_delim("https://raw.githubusercontent.com/CaitlinCasar/Casar2020_DeMMO_MineralHostedBiofilms/master/orig_data/DeMMO136_Dec2015toApril2018_noChimera_otuTable_withTaxa_d10000.txt", delim="\t", comment = "# ")
metadata <- read_csv("https://raw.githubusercontent.com/CaitlinCasar/Casar2020_DeMMO_MineralHostedBiofilms/master/orig_data/metadata.csv")
#store the taxonomy for each OTU
taxonomy <- otu_table %>%
select(`#OTU ID`, taxonomy) %>%
mutate(tax = gsub("Gammaproteobacteria; D_3__Betaproteobacteriales", "Betaproteobacteria; D_3__Betaproteobacteriales", taxonomy), #fix taxonomy for Beta's,
taxonomy = str_remove_all(tax, "D_0__| D_1__| D_2__| D_3__| D_4__| D_5__| D_6__")) %>%
separate(taxonomy ,sep=';',c("domain", "phylum", "class", "order", "family", "genus", "species")) %>%
gather(level, taxonomy, domain:species)
data_table <- DT::datatable(otu_table[1:20,1:20],
caption = htmltools::tags$caption(
style = 'caption-side: bottom; text-align: left; color: gray;',
'Table 1: OTU table'),
options = list(scrollX = TRUE,
lengthMenu = 5,
pageLength = 5,
initComplete = DT::JS("
function(settings, json) {
$(this.api().table().header()).css({
'font-family': 'Helvetica',
});$(this.api().table().body()).css({
'font-family': 'Helvetica',
});$(this.api().table().footer()).css({
'font-family': 'Helvetica',
});
}
")))
widgetframe::frameWidget(data_table, height=400)
#data_table
#htmltools::div(style = 'overflow-x: scroll',DT::dataTableOutput("trace_table",width = "100%"))
#knitr::kable(data[1:5,1:5], "html") %>% kableExtra::kable_styling("striped") %>% kableExtra::scroll_box(width = "100%")
data_table <- DT::datatable(otu_table[1:20,1:20],
caption = htmltools::tags$caption(
style = 'caption-side: bottom; text-align: left; color: gray;',
'Table 1: OTU table'),
options = list(scrollX = TRUE,
lengthMenu = 5,
pageLength = 5,
initComplete = DT::JS("
function(settings, json) {
$(this.api().table().header()).css({
'font-family': 'Helvetica',
});$(this.api().table().body()).css({
'font-family': 'Helvetica',
});$(this.api().table().footer()).css({
'font-family': 'Helvetica',
});
}
")))
widgetframe::frameWidget(data_table, height=400)
#data_table
#htmltools::div(style = 'overflow-x: scroll',DT::dataTableOutput("trace_table",width = "100%"))
#knitr::kable(data[1:5,1:5], "html") %>% kableExtra::kable_styling("striped") %>% kableExtra::scroll_box(width = "100%")
abundance_table <- otu_table %>%
select(-taxonomy) %>%
mutate_at(vars(-`#OTU ID`), funs(./sum(.)*100)) %>% #normalize to relative abundance
gather(sample_id, abundance, `7.DeMMO1.Steri.050917`:`18.800.DitchFluid.041818`)
data_table <- DT::datatable(abundance_table[1:20,],
caption = htmltools::tags$caption(
style = 'caption-side: bottom; text-align: left; color: gray;',
'Table 2: Relative abundances of OTUs'),
options = list(scrollX = TRUE,
lengthMenu = 5,
pageLength = 5,
initComplete = DT::JS("
function(settings, json) {
$(this.api().table().header()).css({
'font-family': 'Helvetica',
});$(this.api().table().body()).css({
'font-family': 'Helvetica',
});$(this.api().table().footer()).css({
'font-family': 'Helvetica',
});
}
")))
widgetframe::frameWidget(data_table, height=400)
#data_table
#htmltools::div(style = 'overflow-x: scroll',DT::dataTableOutput("trace_table",width = "100%"))
#knitr::kable(data[1:5,1:5], "html") %>% kableExtra::kable_styling("striped") %>% kableExtra::scroll_box(width = "100%")
barplot_samples <- c("12.DeMMO1.steri.041818",
"26.DeMMO1.SC1.top.041818",
"22.DeMMO1.C.top.041818",
"23.DeMMO1.D.top.041818",
"24.DeMMO1.E.top.041818",
"27.DeMMO1.SC2.top.041818",
"34.DeMMO1.SC10.top.041818",
"45.DeMMO1.7.top.041818",
"46.DeMMO1.8.top.041818",
"47.DeMMO1.9.top.041818",
"14.DeMMO3.steri.041718",
"51.DeMMO3.A.top.041718",
"27.DeMMO3.T8.top.051117",
"53.DeMMO3.C.top.041718",
"54.DeMMO3.D.top.041718",
"55.DeMMO3.E.top.041718",
"39.DeMMO3.1.top.041718",
"40.DeMMO3.2.top.041718",
"41.DeMMO3.3.top.041718",
"56.DeMMO3.F.top.041718",
"12.DeMMO6.Steri#2.051017",
"13.DeMMO6.T1.top.051017",
"15.DeMMO6.T2.top.051017",
"17.DeMMO6.T3.top.051017",
"19.DeMMO6.T4.top.051017",
"21.DeMMO6.T5.top.051017",
"24.DeMMO6.T6.bottom.051017")
taxon_abundance_table <- abundance_table %>%
left_join(taxonomy) %>%
filter(sample_id %in% barplot_samples & level == "phylum") %>%
mutate(taxonomy = if_else(is.na(taxonomy), "Unassigned", taxonomy))
phylum_color <- distinctColorPalette(k = length(unique(taxon_abundance_table$taxonomy)))
names(phylum_color) <- unique(taxon_abundance_table$taxonomy)
bar_plot <- taxon_abundance_table %>%
left_join(metadata) %>%
group_by(site, experiment.type, taxonomy) %>%
summarise(abundance = sum(abundance)) %>%
ungroup() %>%
mutate(experiment.type = factor(experiment.type, levels = c("fluid", "inert.control", "pyrolusite", "pyrite","hematite","magnetite","siderite","gypsum","muscovite","calcite"))) %>%
ggplot(aes(fill=taxonomy, y=abundance, x=experiment.type)) +
geom_bar(stat='identity', position='fill') +
scale_fill_manual(values=phylum_color) +
coord_flip() +
theme(axis.title = element_blank(),
legend.title = ggplot2::element_blank(),
legend.text = ggplot2::element_text(size = 8),
legend.key.size = unit(0.5, "cm")) +
facet_grid(cols = vars(site), switch = "y") +
guides(fill = guide_legend(ncol = 1))
#test
ggplotly(bar_plot)
widgetframe::frameableWidget(ggplotly(bar_plot))
metathis::meta() %>%
metathis::meta_description("Making figures in microbial ecology: Interative bar plots") %>%
metathis::write_meta("meta.html")
widgetframe::frameableWidget(ggplotly(bar_plot))
widgetframe::frameableWidget(ggplotly(bar_plot))
blogdown::hugo_build(local=T)
blogdown:::serve_site()
blogdown::hugo_build(local=T)
blogdown:::serve_site()
ggplotly(bar_plot)
blogdown:::serve_site()
#load libraries
pacman::p_load(tidyverse, plotly, vegan)
#read the data into a dataframe
otu_table <- read_delim("https://raw.githubusercontent.com/CaitlinCasar/Casar2020_DeMMO_MineralHostedBiofilms/master/orig_data/DeMMO136_Dec2015toApril2018_noChimera_otuTable_withTaxa_d10000.txt", delim="\t", comment = "# ")
metadata <- read_csv("https://raw.githubusercontent.com/CaitlinCasar/Casar2020_DeMMO_MineralHostedBiofilms/master/orig_data/metadata.csv")
data_table <- DT::datatable(otu_table[1:20,1:20],
caption = htmltools::tags$caption(
style = 'caption-side: bottom; text-align: left; color: gray;',
'Table 1: OTU table'),
options = list(scrollX = TRUE,
lengthMenu = 5,
pageLength = 5,
initComplete = DT::JS("
function(settings, json) {
$(this.api().table().header()).css({
'font-family': 'Helvetica',
});$(this.api().table().body()).css({
'font-family': 'Helvetica',
});$(this.api().table().footer()).css({
'font-family': 'Helvetica',
});
}
")))
widgetframe::frameWidget(data_table, height=400)
#data_table
#htmltools::div(style = 'overflow-x: scroll',DT::dataTableOutput("trace_table",width = "100%"))
#knitr::kable(data[1:5,1:5], "html") %>% kableExtra::kable_styling("striped") %>% kableExtra::scroll_box(width = "100%")
otu_norm <- otu_table %>%
select(-taxonomy) %>%
mutate_at(vars(-`#OTU ID`), funs(./sum(.)*100)) %>% #normalize to relative abundance
gather(sample_id, abundance, `7.DeMMO1.Steri.050917`:`18.800.DitchFluid.041818`) %>%
spread(key = `#OTU ID`,value = 'abundance') %>%
right_join(metadata %>% select(sample_id)) %>%
column_to_rownames("sample_id")
NMDS_ord <- otu_norm %>%
metaMDS(k=2)
#pull out ordination and vector coordinates for plotting
NMDS_coords <- NMDS_ord[["points"]] %>%
as_tibble(rownames = "sample_id") %>%
left_join(metadata)
#make shape dictionary for ploting
shape_dict <- c(0, 15, 15, 1, 19, 19, 2, 17, 17, 5, 5)
names(shape_dict) <- c("D1.fluid", "D1.inert.control", "D1.mineral", "D3.fluid", "D3.inert.control", "D3.mineral", "D6.fluid", "D6.inert.control", "D6.mineral","D3.cont.control", "ambient.control")
#NMDS plot with controls
NMDS_plot <- NMDS_coords %>%
ggplot(aes(MDS1, MDS2)) +
geom_point(size=2, alpha=0.8, aes(shape=site.type, color=site.type, label = sample_id)) +
scale_shape_manual(values=shape_dict) +
theme(legend.key.size = unit(.5, "cm"))
#visualize interactive plot
ggplotly(NMDS_plot)
ggplotly(NMDS_plot)
blogdown::hugo_build(local=T)
blogdown:::serve_site()
blogdown::hugo_build(local=T)
blogdown:::serve_site()
blogdown::hugo_build(local=T)
blogdown:::serve_site()
blogdown::serve_site()
blogdown::new_post(title = "my blog post title", subdir="post/my_blog_post_directory", date = "June 9 2020")
blogdown:::serve_site()
blogdown::new_post(title = "my blog post title", subdir="post/my_blog_post_directory", date = "June 9 2020")
blogdown::hugo_build(local = T)
blogdown::new_post(title = "my blog post title", subdir="post/my_blog_post_directory", date = "June 9 2020")
blogdown::hugo_build(local = T)
blogdown:::serve_site()
blogdown::hugo_build(local = T)
blogdown::hugo_build(local = T)
blogdown::hugo_build(local = T)
blogdown::hugo_build(local = T)
blogdown::hugo_build(local = T)
blogdown::hugo_build(local = T)
blogdown::hugo_build(local = T)
blogdown::hugo_build(local = T)
blogdown::hugo_build(local = T)
blogdown::hugo_build(local = T)
blogdown::hugo_build(local = T)
blogdown::hugo_build(local = T)
blogdown::hugo_build(local = T)
blogdown::hugo_build(local = T)
blogdown::hugo_build(local = T)
blogdown::hugo_build(local = T)
blogdown::hugo_build(local = T)
blogdown::hugo_build(local = T)
blogdown::hugo_build(local = T)
blogdown::hugo_build(local = T)
blogdown::hugo_build(local = T)
blogdown::hugo_build()
blogdown::hugo_build()
blogdown::hugo_build()
blogdown::hugo_build()
blogdown::hugo_build()
blogdown::hugo_build()
blogdown::new_post(title="Create beautiful slides with revealJS", subdir="post/revealjs", date = "June 28 2020")
blogdown::hugo_build()
blogdown::hugo_build()
blogdown:::serve_site()
blogdown::hugo_build()
blogdown:::serve_site()
blogdown::hugo_build()
blogdown:::serve_site()
blogdown::hugo_build()
blogdown::hugo_build()
blogdown:::serve_site()
blogdown::hugo_build()
blogdown::hugo_build()
blogdown:::serve_site()
blogdown::hugo_build()
blogdown:::serve_site()
blogdown::hugo_build()
blogdown:::serve_site()
blogdown::hugo_build(local = T)
blogdown::hugo_build()
blogdown:::serve_site()
blogdown::hugo_build()
blogdown:::serve_site()
blogdown::hugo_build()
blogdown:::serve_site()
blogdown::hugo_build()
blogdown:::serve_site()
blogdown::hugo_build()
blogdown:::serve_site()
blogdown::hugo_build()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown::hugo_build()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown::hugo_build()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown::hugo_build()
blogdown:::serve_site()
blogdown::hugo_build()
blogdown:::serve_site()
blogdown::hugo_build()
blogdown:::serve_site()
cleaer
clear
blogdown::hugo_build()
blogdown:::serve_site()
blogdown::hugo_build()
detach("package:blogdown", unload=TRUE)
detach("package:blogdown", unload=TRUE)
detach(blogdown)
detach(("package:blogdown")
)
detach("package:blogdown", unload=TRUE)
unloadNamespace("blogdown")
blogdown::hugo_build()
blogdown:::serve_site()
blogdown::hugo_build()
blogdown:::serve_site()
blogdown::hugo_build()
blogdown:::serve_site()
blogdown::hugo_build()
blogdown::hugo_build()
blogdown::hugo_build()
blogdown:::serve_site()
blogdown::hugo_build()
blogdown:::serve_site()
blogdown::hugo_build()
blogdown::hugo_build()
blogdown:::serve_site()
