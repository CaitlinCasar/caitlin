<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>vegan | Caitlin Casar</title>
    <link>/tag/vegan/</link>
      <atom:link href="/tag/vegan/index.xml" rel="self" type="application/rss+xml" />
    <description>vegan</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-us</language><lastBuildDate>Mon, 01 Jun 2020 21:14:16 -0500</lastBuildDate>
    <image>
      <url>/images/icon_hu65d040ff31842b946eaf5b8caef82e07_3065_512x512_fill_lanczos_center_2.png</url>
      <title>vegan</title>
      <link>/tag/vegan/</link>
    </image>
    
    <item>
      <title>Making figures for microbial ecology: Interactive NMDS plots</title>
      <link>/post/making_figs_2/</link>
      <pubDate>Mon, 01 Jun 2020 21:14:16 -0500</pubDate>
      <guid>/post/making_figs_2/</guid>
      <description>
&lt;script src=&#34;../../rmarkdown-libs/htmlwidgets/htmlwidgets.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;../../rmarkdown-libs/pymjs/pym.v1.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;../../rmarkdown-libs/widgetframe-binding/widgetframe.js&#34;&gt;&lt;/script&gt;


&lt;p&gt;This is the one of several tutorials Iâ€™m putting together for making figures that are common in microbial ecology. Today weâ€™ll create an interactive NMDS plot for exploring your microbial community data. NMDS, or Nonmetric Multidimensional Scaling, is a method for dimensionality reduction. This works great for high demensional datasets like microbial communities and makes it visually easy to compare lots of communities to each other. Weâ€™re using NMDS rather than PCA (principle coordinates analysis) because this method can accomodate the Bray-Curtis dissimilarity distance metric, which is better suited for our community data than Euclidean distance. For this tutorial Iâ€™m using data and code from my &lt;a href=&#34;https://caitlincasar.com/publication/casar2020/&#34;&gt;publication&lt;/a&gt; in &lt;em&gt;Geobiology&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;First weâ€™ll need to set up our environment in R:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#load libraries 
pacman::p_load(tidyverse, plotly, vegan)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Next, read the OTU data into a dataframe. We can pull the data directy from Github by reading the raw file. You can preview the data in the table below this code chunk.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#read the data into a dataframe
otu_table &amp;lt;- read_delim(&amp;quot;https://raw.githubusercontent.com/CaitlinCasar/Casar2020_DeMMO_MineralHostedBiofilms/master/orig_data/DeMMO136_Dec2015toApril2018_noChimera_otuTable_withTaxa_d10000.txt&amp;quot;, delim=&amp;quot;\t&amp;quot;, comment = &amp;quot;# &amp;quot;)

metadata &amp;lt;- read_csv(&amp;quot;https://raw.githubusercontent.com/CaitlinCasar/Casar2020_DeMMO_MineralHostedBiofilms/master/orig_data/metadata.csv&amp;quot;) &lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;htmlwidget-1&#34; style=&#34;width:100%;height:400px;&#34; class=&#34;widgetframe html-widget&#34;&gt;&lt;/div&gt;
&lt;script type=&#34;application/json&#34; data-for=&#34;htmlwidget-1&#34;&gt;{&#34;x&#34;:{&#34;url&#34;:&#34;/post/making_figs_2/index_files/figure-html//widgets/widget_unnamed-chunk-3.html&#34;,&#34;options&#34;:{&#34;xdomain&#34;:&#34;*&#34;,&#34;allowfullscreen&#34;:false,&#34;lazyload&#34;:false}},&#34;evals&#34;:[],&#34;jsHooks&#34;:[]}&lt;/script&gt;
&lt;p&gt;First we need to normalize our data.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;otu_norm &amp;lt;- otu_table %&amp;gt;%
  select(-taxonomy) %&amp;gt;%
  mutate_at(vars(-`#OTU ID`), funs(./sum(.)*100)) %&amp;gt;% #normalize to relative abundance 
  gather(sample_id, abundance, `7.DeMMO1.Steri.050917`:`18.800.DitchFluid.041818`) %&amp;gt;%
  spread(key = `#OTU ID`,value = &amp;#39;abundance&amp;#39;) %&amp;gt;%
  right_join(metadata %&amp;gt;% select(sample_id)) %&amp;gt;%
  column_to_rownames(&amp;quot;sample_id&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now, letâ€™s use the metaMDS function in vegan to perform NMDS. Weâ€™ll use the default distance metric, Bray-Curtis dissimilarity, and set the argument k to 2 dimensions.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;NMDS_ord &amp;lt;- otu_norm %&amp;gt;%
  metaMDS(k=2)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now letâ€™s pull out the NMDS coordinates for axes MDS1 and MDS2 for plotting purposes.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#pull out ordination and vector coordinates for plotting
NMDS_coords &amp;lt;- NMDS_ord[[&amp;quot;points&amp;quot;]] %&amp;gt;%
  as_tibble(rownames = &amp;quot;sample_id&amp;quot;) %&amp;gt;%
  left_join(metadata)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We can create a dictionary of shapes for our plot like this:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#make shape dictionary for ploting 
shape_dict &amp;lt;- c(0, 15, 15, 1, 19, 19, 2, 17, 17, 5, 5)
names(shape_dict) &amp;lt;- c(&amp;quot;D1.fluid&amp;quot;, &amp;quot;D1.inert.control&amp;quot;, &amp;quot;D1.mineral&amp;quot;, &amp;quot;D3.fluid&amp;quot;, &amp;quot;D3.inert.control&amp;quot;, &amp;quot;D3.mineral&amp;quot;, &amp;quot;D6.fluid&amp;quot;, &amp;quot;D6.inert.control&amp;quot;, &amp;quot;D6.mineral&amp;quot;,&amp;quot;D3.cont.control&amp;quot;, &amp;quot;ambient.control&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now letâ€™s plot the data!&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#NMDS plot with controls 
NMDS_plot &amp;lt;- NMDS_coords %&amp;gt;%
  ggplot(aes(MDS1, MDS2)) +
  geom_point(size=2, alpha=0.8, aes(shape=site.type, color=site.type, label = sample_id)) +
  scale_shape_manual(values=shape_dict) +
  theme(legend.key.size = unit(.5, &amp;quot;cm&amp;quot;))


#visualize interactive plot
ggplotly(NMDS_plot)&lt;/code&gt;&lt;/pre&gt;
&lt;iframe src=&#34;plot.html&#34; width=&#34;100%&#34; height=&#34;500&#34; style=&#34;border: none;&#34;&gt;
&lt;/iframe&gt;
&lt;p&gt;Now we have a nice interactive plot for exploring the ordination. Easy-peasy! ðŸ˜Ž&lt;/p&gt;
&lt;a class=&#34;github-button&#34; href=&#34;https://github.com/CaitlinCasar/Casar2020_DeMMO_MineralHostedBiofilms&#34; data-icon=&#34;octicon-repo-forked&#34; aria-label=&#34;Fork ntkme/github-buttons on GitHub&#34;&gt;Fork Me&lt;/a&gt;
&lt;script async defer src=&#34;https://buttons.github.io/buttons.js&#34;&gt;&lt;/script&gt;
</description>
    </item>
    
  </channel>
</rss>
